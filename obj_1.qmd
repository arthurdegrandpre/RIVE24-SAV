---
title: "obj_1"
format: 
  html:
    self-contained: true
editor: visual
---

# Objectif 1

**Évaluer la performance de prédiction de la présence de végétation aquatique submergée dans les différents tronçons fluviaux du fleuve Saint-Laurent à l'aide des données RSI**

1.  Modéliser statistiquement la relation entre la présence de VAS, la profondeur et la disponibilité en lumière pour les différents tronçons fluviaux du fleuve Saint-Laurent.

2.  Évaluer l'importance de la variabilité physico-chimique / optique de l'eau dans la prédiction de la présence de VAS dans le cas du lac Saint-Pierre, via l'intégration des masses d'eau dans le modèle prédictif.

Cet objectif a été réalisé majoritairement dans le contexte du RIVE hacking 2024, à la maison Gault.

Équipe responsable: Arthur de Grandpré, Gilbert Cabana, Thibault Tournadre, avec contribution de Martin Laporte et Charles Martin

# Méthode

Modélistion statistique non linéaire des effets de la profondeur **(au zéro bathymétrique ou brute?)** et de la disponibilité en lumière (turbidité, ou Secchi) par modèles modèles linéaires généralisés (GLM) ***et/ou additifs généralisés (GAM).***

Effets fixes: Profondeur, Secchi, Interaction Profondeur-Secchi

Effets aléatoires: Années, Secteurs, Masse d'eau

# Analyse

Charger les packages

```{r libs, message=F, warning=F, echo=F}
library(tidyverse)
library(lme4)
library(mgcv)
library(performance)
library(ggpubr)
library(sf)
library(mapview)
```

Préparer les données pour l'analyse des secteurs visés, et création d'une variable présence/absence binaire.

```{r datasetup, message=F, warning=F, echo=F}
rsi = read.csv("local/rsi.csv", header=T)

df = rsi %>%
  group_by(Secteur, Annee) %>%
  select(-X, -Bimesure, -Station, -Rive, -Mesure, -Fin) %>%
  mutate(Presence = case_when(Abondance <= 1 ~ 0,
                                  Abondance > 1 ~ 1)) %>%
  drop_na(Presence) %>%
  filter(Secteur %in% c("ArchStPierre",
                        "LacStFrancois",
                        "LacStLouis",
                        "LacStPierre",
                        "BecanBatiscan",
                        "MtlSorel",
                        "HautRichelieu",
                        "LacDeuxMontagnes")
         )
```

1.  Modéliser statistiquement la relation entre la présence de VAS, la profondeur et la disponibilité en lumière pour les différents tronçons fluviaux du fleuve Saint-Laurent.

Visualisation des effets individuels

```{r vis, message=F, warning=F}
gg_prof = df %>% 
  ggplot(aes(x=Prof_Moyenne, y=Presence))+
  geom_point()+
  geom_smooth(method = "gam", se=T)+
  geom_smooth(method = "gam", se=F, aes(col=df$Secteur))

gg_turbi = df %>% 
  ggplot(aes(x=Turbidite, y=Presence))+
  geom_point()+
  geom_smooth(method = "gam", se=T)+
  geom_smooth(method = "gam", se=F, aes(col=df$Secteur))

ggpubr::ggarrange(gg_prof, gg_turbi, common.legend = T)

```

Bien que l'effet de la profondeur soit évident, avec un intercept fort variable, les effets de la turbidité sont plus difficiles à visualiser comme tel.

Modélisation des effets; glmer

```{r glmerfit}
fit_1 = glmer(
  Presence ~ Turbidite + Prof_Moyenne + (1|Annee) + (1|Secteur),
            data = df,
            family = binomial)

fit_1_interaction = glmer(
  Presence ~ Turbidite * Prof_Moyenne + (1|Annee) + (1|Secteur),
            data = df,
            family = binomial)

compare_performance(fit_1, fit_1_interaction)
```

Résulte en une sélection du modèle sans intéraction. Le faible R2 marginal suggère un effet important des facteurs aléatoires (Année et Secteur)

```{r glmerfit_summary}
summary(fit_1)
```

Les deux effets fixes sont considérés significatifs.

Comparaison des secteurs

```{r glm_secteurs, message=F, warning=F}
fit_s1 = glmer(
  Presence ~ Turbidite + Prof_Moyenne + (1|Annee),
            data = filter(df, Secteur == "ArchStPierre"),
            family = binomial)

fit_s2 = glmer(
  Presence ~ Turbidite + Prof_Moyenne + (1|Annee),
            data = filter(df, Secteur == "LacStFrancois"),
            family = binomial)

fit_s3 = glmer(
  Presence ~ Turbidite + Prof_Moyenne + (1|Annee),
            data = filter(df, Secteur == "LacStLouis"),
            family = binomial)

fit_s4 = glmer(
  Presence ~ Turbidite + Prof_Moyenne + (1|Annee),
            data = filter(df, Secteur == "LacStPierre"),
            family = binomial)

fit_s5 = glmer(
  Presence ~ Turbidite + Prof_Moyenne + (1|Annee),
            data = filter(df, Secteur == "BecanBatiscan"),
            family = binomial)

fit_s6 = glmer(
  Presence ~ Turbidite + Prof_Moyenne + (1|Annee),
            data = filter(df, Secteur == "MtlSorel"),
            family = binomial)

fit_s7 = glm( # sans effet aléatoire car une seule année disponible
  Presence ~ Turbidite + Prof_Moyenne,
            data = filter(df, Secteur == "HautRichelieu"),
            family = binomial)

fit_s8 = glm( # sans effet aléatoire car une seule année disponible
  Presence ~ Turbidite + Prof_Moyenne,
            data = filter(df, Secteur == "LacDeuxMontagnes"),
            family = binomial)

scoretab = compare_performance(fit_s1, fit_s2, fit_s3, fit_s4, fit_s5, fit_s6, fit_s7, fit_s8)

# produire un tableau qui compile les coefficient et différents r2 par secteur
secteur_summary = tibble(
  Secteur = c("ArchStPierre", "LacStFrancois", "LacStLouis",
              "LacStPierre", "BecanBatiscan", "MtlSorel",
              "HautRichelieu", "LacDeuxMontagnes"),
  Intercept = c(summary(fit_s1)$coefficients[1,1], summary(fit_s2)$coefficients[1,1],
                summary(fit_s3)$coefficients[1,1], summary(fit_s4)$coefficients[1,1],
                summary(fit_s5)$coefficients[1,1], summary(fit_s6)$coefficients[1,1],
                summary(fit_s7)$coefficients[1,1], summary(fit_s8)$coefficients[1,1]),
  Turbidite = c(summary(fit_s1)$coefficients[2,1], summary(fit_s2)$coefficients[2,1],
                summary(fit_s3)$coefficients[2,1], summary(fit_s4)$coefficients[2,1],
                summary(fit_s5)$coefficients[2,1], summary(fit_s6)$coefficients[2,1],
                summary(fit_s7)$coefficients[2,1], summary(fit_s8)$coefficients[2,1]),
  Profondeur = c(summary(fit_s1)$coefficients[3,1], summary(fit_s2)$coefficients[3,1],
                summary(fit_s3)$coefficients[3,1], summary(fit_s4)$coefficients[3,1],
                summary(fit_s5)$coefficients[3,1], summary(fit_s6)$coefficients[3,1],
                summary(fit_s7)$coefficients[3,1], summary(fit_s8)$coefficients[3,1]),
  R2.cond = scoretab$R2_conditional,
  R2.marg = scoretab$R2_marginal,
  R2 = scoretab$R2_Tjur
)

secteur_summary %>% gt::gt() %>% gt::fmt_number(decimals = 2)
```

Les résultats suggèrent une variabilité importante entre les secteurs, avec des performances predictives beaucoup plus faibles dans les secteurs de l'archipelle du Lac Saint-Pierre et du Lac Saint-Pierre; le tronçon le moins profond, le plus turbide, mais aussi le plus contrasté spatiotemporellement (masses d'eau, innondations).


Modélisation alternative des effets; gamm

```{r gamfit}

```


2.  Évaluer l'importance de la variabilité physico-chimique / optique de l'eau dans la prédiction de la présence de VAS dans le cas du lac Saint-Pierre, via l'intégration de masses d'eau approximatives dans le modèle prédictif.

Séparation des masses d'eau

```{r}
lsp = df %>% filter(Secteur %in% c("LacStPierre")) %>% 
  ungroup()

hist(lsp$Turbidite)
hist(lsp$Conductivite)

lsp %>%
  select(Turbidite,
             Conductivite,
             pH,
             TemperatureEau,
             Latitude,
             Longitude)

hc = hclust(
  dist(
      as.data.frame(lapply(select(lsp, Turbidite, Conductivite, Latitude), function(x) scale(x, center = T)))
    )
  )

plot(hc)
clusters = cutree(hc, k=6)

lsp %>%
  ungroup() %>% 
  mutate(clusters = clusters) %>% 
  ggplot(aes(x=Turbidite, y=Conductivite, col=as.factor(clusters)))+
  geom_point()

lsp %>% 
  ggplot(aes(x=Longitude, y=Latitude, col=as.factor(clusters)))+
  geom_point()+
  ggtitle("Masses d'eau optiques, Hclust")

table(clusters)
```

```{r}
lsp2 = lsp %>%
  ungroup() %>% 
  mutate(clusters = as.factor(clusters),
         Annee = as.factor(Annee)) %>%
  na.omit(Turbidite, Prof_Moyenne)

table(lsp2$Annee)

training = lsp2 %>% slice_sample(n=80,by=Annee, replace = F)
table(training$Annee)

fit_lsp = glmer(
  Presence ~ Turbidite + Prof_Moyenne + (1|Annee) + (1|clusters),
            data = training,
            family = binomial)

fit_lspx = glmer(
  Presence ~ Turbidite * Prof_Moyenne + (1|Annee) + (1|clusters),
            data = training,
            family = binomial)

compare_performance(fit_lsp, fit_lspx)

summary(fit_lsp)

lsp2$pred = predict(fit_lsp, lsp2, new.data=lsp2, type="response")

library(sf)
lsp3 = st_as_sf(lsp2, coords=c("Longitude", "Latitude")) %>% 
  st_set_crs(4326)

library(mapview)
mapview(lsp3, zcol="pred")

lsp4 = lsp3 %>% 
mutate(prediction = case_when(as.numeric(pred) >= 0.65 ~ 1,
                              as.numeric(pred) < 0.65 ~ 0))
lsp4 %>% 
  ggplot(aes(col=as.factor(prediction)))+
  geom_sf()+
  facet_wrap(~Annee)+
  labs(col="présence prédite, seuil 0.65")

lsp4 %>% 
  ggplot(aes(col=as.factor(Presence)))+
  geom_sf()+
  facet_wrap(~Annee)+
  labs(col="présence observée")

lsp4 %>% 
  mutate(erreur = case_when(Presence == prediction ~ 0,
                          Presence != prediction ~ 1)) %>%
  ggplot(aes(col=as.factor(erreur)))+
  geom_sf()+
  facet_wrap(~Annee)+
  labs(col="erreur de prédiction")

```
Le R2 conditionnel est beaucoup plus élevé en présence de l'effet masse d'eau, mais le R2 marginal reste faible. La visualisation des prédictions révèle de fortes incohérences avec les observations sur le terrain.
